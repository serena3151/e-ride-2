{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\e ride 2\\\\screens\\\\Ride.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport * as Permissions from \"expo-permissions\";\nimport { BarCodeScanner } from \"expo-barcode-scanner\";\n\nvar TransactionScreen = function (_Component) {\n  _inherits(TransactionScreen, _Component);\n\n  var _super = _createSuper(TransactionScreen);\n\n  function TransactionScreen(props) {\n    var _this;\n\n    _classCallCheck(this, TransactionScreen);\n\n    _this = _super.call(this, props);\n\n    _this.getCameraPermissions = function _callee(domState) {\n      var _await$Permissions$as, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n            case 2:\n              _await$Permissions$as = _context.sent;\n              status = _await$Permissions$as.status;\n\n              _this.setState({\n                hasCameraPermissions: status === \"granted\",\n                domState: domState,\n                scanned: false\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.handleBarCodeScanned = function _callee2(_ref) {\n      var type, data;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              type = _ref.type, data = _ref.data;\n\n              _this.setState({\n                scannedData: data,\n                domState: \"normal\",\n                scanned: true\n              });\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      domState: \"normal\",\n      hasCameraPermissions: null,\n      scanned: false,\n      scannedData: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(TransactionScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          domState = _this$state.domState,\n          hasCameraPermissions = _this$state.hasCameraPermissions,\n          scannedData = _this$state.scannedData,\n          scanned = _this$state.scanned;\n\n      if (domState === \"scanner\") {\n        return React.createElement(BarCodeScanner, {\n          onBarCodeScanned: scanned ? undefined : this.handleBarCodeScanned,\n          style: StyleSheet.absoluteFillObject,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 9\n          }\n        });\n      }\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }\n      }, hasCameraPermissions ? scannedData : \"Request for Camera Permission\"), React.createElement(TouchableOpacity, {\n        style: [styles.button, {\n          marginTop: 25\n        }],\n        onPress: function onPress() {\n          return _this2.getCameraPermissions(\"scanner\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }\n      }, \"Scan QR Code\")));\n    }\n  }]);\n\n  return TransactionScreen;\n}(Component);\n\nexport { TransactionScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#D0E6F0\"\n  },\n  text: {\n    color: \"#4C5D70\",\n    fontSize: 15\n  },\n  button: {\n    width: \"43%\",\n    height: 55,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#FBE5C0\",\n    borderRadius: 15,\n    borderWidth: 2\n  },\n  buttonText: {\n    fontSize: 24,\n    color: \"#4C5D70\"\n  }\n});","map":{"version":3,"sources":["C:/Users/User/Desktop/e ride 2/screens/Ride.js"],"names":["React","Component","Permissions","BarCodeScanner","TransactionScreen","props","getCameraPermissions","domState","askAsync","CAMERA","status","setState","hasCameraPermissions","scanned","handleBarCodeScanned","type","data","scannedData","state","undefined","StyleSheet","absoluteFillObject","styles","container","text","button","marginTop","buttonText","create","flex","justifyContent","alignItems","backgroundColor","color","fontSize","width","height","borderRadius","borderWidth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { View, Text, StyleSheet, TouchableOpacity } from \"react-native\";\nimport * as Permissions from \"expo-permissions\";\nimport { BarCodeScanner } from \"expo-barcode-scanner\";\n\nexport default class TransactionScreen extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      domState: \"normal\",\n      hasCameraPermissions: null,\n      scanned: false,\n      scannedData: \"\"\n    };\n  }\n\n  getCameraPermissions = async domState => {\n    const { status } = await Permissions.askAsync(Permissions.CAMERA);\n    this.setState({\n    //  status === \"granted\" is true when user has granted permission\n          \n      hasCameraPermissions: status === \"granted\",\n      domState: domState,\n      scanned: false\n    });\n  };\n\n  handleBarCodeScanned = async ({ type, data }) => {\n    this.setState({\n      scannedData: data,\n      domState: \"normal\",\n      scanned: true\n    });\n  };\n\n  render() {\n    const { domState, hasCameraPermissions, scannedData, scanned } = this.state;\n    if (domState === \"scanner\") {\n      return (\n        <BarCodeScanner\n          onBarCodeScanned={scanned ? undefined : this.handleBarCodeScanned}\n          style={StyleSheet.absoluteFillObject}\n        />\n      );\n    }\n\n    return (\n      <View style={styles.container}>\n        <Text style={styles.text}>\n          {hasCameraPermissions ? scannedData : \"Request for Camera Permission\"}\n        </Text>\n        \n        \n        {\n          <TouchableOpacity\n            style={[styles.button, { marginTop: 25 }]}\n            onPress={() => this.getCameraPermissions(\"scanner\")}\n          >\n            <Text style={styles.buttonText}>Scan QR Code</Text>\n          </TouchableOpacity> \n        }\n\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#D0E6F0\"\n  },\n  text: {\n    color: \"#4C5D70\",\n    fontSize: 15\n  },\n  button: {\n    width: \"43%\",\n    height: 55,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#FBE5C0\",\n    borderRadius: 15,\n    borderWidth: 2\n  },\n  buttonText: {\n    fontSize: 24,\n    color: \"#4C5D70\"\n  }\n});\n"]},"metadata":{},"sourceType":"module"}